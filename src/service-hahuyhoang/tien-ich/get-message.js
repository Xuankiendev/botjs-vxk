import { sendMessageFromSQL, sendMessageFailed, sendMessageQuery } from "../../service-hahuyhoang/chat-zalo/chat-style/chat-style.js";

export async function handleGetMessageCommand(api, message) {
  try {
    const quote = message.data?.quote || message.reply;
    if (!quote) {
      await sendMessageQuery(api, message, "Reply tin nh·∫Øn c·∫ßn l·∫•y th√¥ng tin! ü§î");
      return;
    }
    if (quote.attach) {
      quote.attach = JSON.parse(quote.attach);
      if (quote.attach.params) {
        quote.attach.params = JSON.parse(quote.attach.params.replace(/\\\\/g, "\\").replace(/\\\//g, "/"));
      }
    }
    const fromD = quote.fromD;
    const ownerId = quote.ownerId;
    const cliMsgId = quote.cliMsgId;
    const cliMsgType = quote.cliMsgType;
    const ttl = quote.ttl;
    const msg = quote.msg || "Kh√¥ng c√≥";
    const attach = quote.attach && Object.keys(quote.attach).length > 0 ? JSON.stringify(quote.attach, null, 2) : "Kh√¥ng c√≥ ƒë√≠nh k√®m";
    const logMessage = `Ng∆∞·ªùi g·ª≠i: ${fromD}\nID Ng∆∞·ªùi G·ª≠i: ${ownerId}\ncliMsgId: ${cliMsgId}\ncliMsgType: ${cliMsgType}\nTime to live: ${ttl}\nMsg: ${msg}\nƒê√≠nh k√®m: ${attach}`;
    await sendMessageFromSQL(api, message, { caption: logMessage }, 1800000);
  } catch (error) {
    const errorMessage = `ƒê√£ x·∫£y ra l·ªói khi g·ª≠i log d·ªØ li·ªáu: ${error.message}`;
    await sendMessageFailed(api, message, errorMessage);
  }
}
